version: 2
jobs:
  build:
    docker:
      - image: ubuntu:xenial
    working_directory: ~/edx-platform
    parallelism: 4
    artifacts:
      - "reports"
      - "test_root/log"
    steps:
      - run:
          name: install git
          command: 'sudo DEBIAN_FRONTEND=noninteractive apt-get -y install git'
      - checkout
      - run:
          name: check working directory
          command: 'sudo ls -lasp ~/edx-platform'
      - run:
          name: apt-get update
          command: 'sudo DEBIAN_FRONTEND=noninteractive apt-get -y update'
      - run:
          name: install software-properties-common
          command: 'sudo DEBIAN_FRONTEND=noninteractive apt-get -y install software-properties-common'
      - run:
          name: set ppa
          command: 'sudo add-apt-repository ppa:ubuntu-toolchain-r/test'
      - run:
          name: apt-get update
          command: 'sudo DEBIAN_FRONTEND=noninteractive apt-get -y update'      
      - run: 
          name: install gettext
          command: 'sudo DEBIAN_FRONTEND=noninteractive apt-get -y install gettext'
      - run:
          name: install needed apt packages
          command: 'sudo DEBIAN_FRONTEND=noninteractive apt-get install -q -y $(cat ./requirements/system/ubuntu/apt-packages.txt)'
      - run:
          name: install nodejs
          command: |
            sudo curl -sL https://deb.nodesource.com/setup_6.x -o nodesource_setup.sh
            sudo bash nodesource_setup.sh
            sudo apt-get -y install nodejs
      - run:
          name: do a apt-get upgrade
          command: 'sudo DEBIAN_FRONTEND=noninteractive apt-get -y upgrade'
      - run:
          name: npm install
          command: 'npm install'
      - run:
          name: set new compilers
          command: |
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 50 
            sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 50
      - run:
          name: install pip
          command: 'easy_install pip'
      - run:
          name: pip install setuptools
          command: 'pip install setuptools'
      - run:
          name: install pre requirements
          command: 'pip install --exists-action w -r ./requirements/edx/pre.txt'
      - run:
          name: install github requirements
          command: 'pip install --exists-action w -r ./requirements/edx/github.txt'
      - run:
          name: install local requirements
          command: 'pip install --exists-action w -r ./requirements/edx/local.txt'
      - run:
          name: pip install Django.txt
          command: 'pip install --exists-action w -r ./requirements/edx/django.txt'
      - run:
          name: install base requirements
          command: 'pip install --exists-action w -r ./requirements/edx/base.txt'
      - run:
          name: pip install paver.txt
          command: 'pip install --exists-action w -r ./requirements/edx/paver.txt'
      - run:
          name: install development requirements
          command: 'pip install --exists-action w -r ./requirements/edx/development.txt'
      - run:
          name: install testing requirements
          command: 'pip install --exists-action w -r ./requirements/edx/testing.txt'
      - run:
          name: install pbr
          command: 'pip install  --exists-action w pbr'
      - run:
          name: install post if required
          command: 'if [ -e ./requirements/edx/post.txt ]; then pip install --exists-action w -r ./requirements/edx/post.txt ; fi'
      - run:
          name: install coveralls
          command: 'pip install coveralls==1.0'
      - run:
          name: output install packages to console, help with debug
          command: 'pip freeze'
      - run:
          name: set mongo bindaddress
          command: |
            sudo apt-get install --reinstall sed
            sudo sed -i -e 's/127.0.0.1/0.0.0.0/g' /etc/mongodb.conf
            sudo service mongodb restart
      - run:
          name: run all tests
          command: '/bin/bash ./scripts/all-tests.sh'
          no_output_timeout: 20m
