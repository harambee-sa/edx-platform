version: 2
jobs:
  build_development:
    docker:
      - image: ubuntu:xenial-20171006
    working_directory: ~/edx-platform
    parallelism: 4
    artifacts:
      - "reports"
      - "test_root/log"
    steps:
      - run:
          name: apt-get update
          command: 'DEBIAN_FRONTEND=noninteractive apt-get -y update'
      - run:
          name: install software-properties-common
          command: 'apt-get install software-properties-common package'
      - run:
          name: set ppa
          command: 'add-apt-repository ppa:ubuntu-toolchain-r/test'
      - run:
          name: apt-get update
          command: 'DEBIAN_FRONTEND=noninteractive apt-get -y update'
      - run:
          name: install git
          command: 'DEBIAN_FRONTEND=noninteractive apt-get -y install git'
      - run:
          name: install nodejs
          command: 'DEBIAN_FRONTEND=noninteractive apt-get -y install nodejs'
      - run:
          name: install npm
          command: 'DEBIAN_FRONTEND=noninteractive apt-get -y install npm'
      - checkout
      - run:
          name: install needed apt packages
          command: 'DEBIAN_FRONTEND=noninteractive apt-get install -q -y $(cat requirements/system/ubuntu/apt-packages.txt)'
      - run:
          name: do a apt-get upgrade
          command: 'DEBIAN_FRONTEND=noninteractive apt-get -y upgrade'
      - run:
          name: nmp install
          command: 'npm install'
      - run:
           name: apt-get install python
           command: 'apt-get -y install python-setuptools python-dev build-essential --fix-missing'
      - run:
           name: install compilers
           command: 'apt-get install -y gcc-6 g++-6'
      - run:
           name: set new compilers
           command: 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 50 && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 50'
      - run:
           name: install pip 
           command: 'easy_install pip'
      - run:
          name: pip install setuptools
          command: 'pip install setuptools'
      - run:
          name: pip install Django.txt
          command: 'pip install --exists-action w -r requirements/edx/django.txt'
      - run:
          name: pip install paver.txt
          command: 'pip install --exists-action w -r requirements/edx/paver.txt'
      - run:
          name: install pre requirements
          command: 'pip install --exists-action w -r requirements/edx/pre.txt'
      - run:
          name: install github requirements
          command: 'pip install --exists-action w -r requirements/edx/github.txt' 
      - run:
          name: install local requirements
          command: 'pip install --exists-action w -r requirements/edx/local.txt'
      - run:
          name: install pbr
          command: 'pip install  --exists-action w pbr==0.9.0'
      - run:
          name: install base requirements
          command: 'pip install --exists-action w -r requirements/edx/base.txt'
      - run:
          name: install testing requirements
          command: 'pip install --exists-action w -r requirements/edx/testing.txt'
      - run: 
          name: install post if required
          command: 'if [ -e requirements/edx/post.txt ]; then pip install --exists-action w -r requirements/edx/post.txt ; fi'
      - run:
          name: install coveralls
          command: 'pip install coveralls==1.0'
      - run:
          name: output install packages to console, help with debug
          command: 'pip freeze'
      - run:
          name: run all tests
          command: './scripts/all-tests.sh'
          no_output_timeout: 20m
      - store_artifacts:
          path: reports
          destination: test_reports
      - store_test_results:
          path: test_root/log



workflows:
  version: 2
  build:
    jobs:
      - build_development:
          filters:
            branches:
              only: proversity/development
